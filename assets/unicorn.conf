upstream app_server {
  server unix:/var/applications/filter/current/tmp/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name tryfilter.com www.tryfilter.com;

  access_log /var/applications/filter/current/log/access.log;
  error_log /var/applications/filter/current/log/error.log;

  root /var/applications/filter/current/public/;

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # this is the meat of the rails page caching config
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewite the url to have explicit .html on the end  
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the  
    # necessary headers and proxies to our upstream unicorns
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }

    if (!-f $request_filename) {
      proxy_pass http://app_server;
      break;
    }
  }

  error_page 500 502 503 504 /500.html;
  location /500.html {
    root /var/applications/filter/current/public;
  }

}